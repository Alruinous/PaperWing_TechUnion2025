"""
Django settings for minisemester project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-@0k2$q_dl-h24o!#r@)26vgs+ktour+v-32l5crit%&7+57e43"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'corsheaders',
    "rest_framework",
    "users",
    "discussions",
    "publications",
    'utils',
    "document"
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "minisemester.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "minisemester.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "minisemester_db",  # 您需要在 MySQL 中创建的数据库名称
        "USER": "root",  # 您的 MySQL 用户名
        "PASSWORD": "buaa123",  # 您提供的服务器数据库密码
        "HOST": "127.0.0.1",  # 数据库服务器地址，本地通常是 '127.0.0.1' 或 'localhost'
        "PORT": "3306",  # MySQL 默认端口
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = 'users.User'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"


MEDIA_ROOT = BASE_DIR / 'media'

# MEDIA_URL: 浏览器访问媒体文件的 URL 前缀。
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 允许跨域携带 Cookie（关键！）
#SESSION_COOKIE_SAMESITE = "None"  # 跨域时必须为 "None"
#SESSION_COOKIE_SECURE = True     # 必须为 True（如果前端是 HTTPS）
# 允许跨域携带 Cookie（关键！）
SESSION_COOKIE_SAMESITE = 'Lax'  # 跨域时必须为 "None"
SESSION_COOKIE_SECURE = False     # 必须为 True（如果前端是 HTTPS）
# CORS 配置
# CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = [
    "http://10.251.254.221",
    "http://localhost:5173",  # 假设您的 Vite/Vue 前端开发服务器地址
    "http://localhost:5174",  # 假设您的 Vite/Vue 前端开发服务器地址
    "http://127.0.0.1:5173",
    "http://localhost:3000",  # 假设您的 React 前端开发服务器地址
    "http://127.0.0.1:3000",
    # 如果您有其他前端地址，也一并添加进来
]


# 如果您需要在跨域请求中发送 Cookies (例如用于 session 登录)，请设置为 True
CORS_ALLOW_CREDENTIALS = True

APPEND_SLASH = False


# ==============================================================================
# EMAIL CONFIGURATION (邮件配置)
# ==============================================================================
# 使用 SMTP 后端
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# 您的邮件服务商的 SMTP 服务器地址
# (例如: QQ邮箱是 'smtp.qq.com', 163邮箱是 'smtp.163.com')
EMAIL_HOST = 'smtp.qq.com'

# SMTP 端口 (TLS加密通常使用 587)
EMAIL_PORT = 587

# 必须开启 TLS 加密，保障邮件安全
EMAIL_USE_TLS = True

# --- 请将下面两行替换为您自己的信息 ---
# 您的邮箱账号 (例如: '123456@qq.com')
EMAIL_HOST_USER = '2711206251@qq.com'

# 您的邮箱授权码 (注意：这不是登录密码！)
# 您需要登录邮箱网页版，在“设置”->“账户”中开启SMTP服务并生成授权码。
EMAIL_HOST_PASSWORD = 'xgnzrmqqfsnkdcfd'

# 邮件中显示的发件人名称
DEFAULT_FROM_EMAIL = f"PaperWing 平台 <{EMAIL_HOST_USER}>"

# AI配置
DASHSCOPE_API_KEY = os.getenv("DASHSCOPE_API_KEY")
DASHSCOPE_BASE_URL = os.getenv("DASHSCOPE_BASE_URL")
DEEPSEEK_MODEL_NAME = os.getenv("DEEPSEEK_MODEL_NAME", "deepseek-v3")


# --- 自定义设置：API 认证全局开关 ---
# 设置为 True:  开启所有 @login_and_owner_required 装饰器的安全检查 (用于生产环境)
# 设置为 False: 禁用所有 @login_and_owner_required 装饰器的安全检查 (用于前端调试)
ENFORCE_API_AUTH = True

SERVER_ADDRESS = "http://10.251.254.221:8000"